package edu.coverter.dfd.pojo;

/**
 * Mohammed Kharma
 * 3/7/2023
 */

import com.google.gson.Gson;
import edu.coverter.apm.pojo.LinkDataArray;
import edu.coverter.apm.pojo.NodeDataArray;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.nio.charset.StandardCharsets;

public class ReadJSONExample {
    public static void main(String[] args) {
        //JSON parser object to parse read file
        JSONParser jsonParser = new JSONParser();

        try (FileReader reader = new FileReader(
                "C:\\M.kharma_data\\PhD\\03-Semester-2022\\Threat-modeling\\course-work\\APMToolOutoutExample.json")) {
            //Read JSON file
            JSONObject obj = (JSONObject) jsonParser.parse(reader);

//https://stackoverflow.com/questions/29965764/how-to-parse-json-file-with-gson
            JSONArray linkDataObject = (JSONArray) ((JSONObject) obj.get("applicationMapData")
            ).get("linkDataArray");

            JSONArray nodeDataObject = (JSONArray) ((JSONObject) obj.get("applicationMapData")
            ).get("nodeDataArray");

            NodeDataArray[] nodeDataArray = new Gson().fromJson(linkDataObject.toJSONString(),
                    NodeDataArray[].class);
            LinkDataArray[] linkDataArray = new Gson().fromJson(nodeDataObject.toJSONString(),
                    LinkDataArray[].class);
            createDFD(nodeDataArray, linkDataArray);
//            ApplicationMapData user = gson.fromJson(linkDataArray.toJSONString(),ApplicationMapData.class);
            System.out.println(nodeDataArray[0].toString());
            System.out.println(linkDataArray[0].toString());

            //Iterate over employee array
//            linkDataArray.forEach( emp -> parseEmployeeObject( (JSONObject) emp ) );

        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } catch (ParseException e) {
            e.printStackTrace();
        }
    }

    private static void createDFD(NodeDataArray[] nodeDataArray, LinkDataArray[] linkDataArray) throws IOException {
        Dfd dfd = new Dfd();
        Summary summary = new Summary();
        summary.setTitle("Data Flow Diagram - auto generated by converter");
        summary.setOwner("Mohammed Kharma");
        dfd.setSummary(summary);

        String jsonText = new Gson().toJson(dfd);
        System.out.println(jsonText);
        FileOutputStream fileOutputStream = null;
        try {
            fileOutputStream = new FileOutputStream("C:\\M.kharma_data\\PhD\\03-Semester-2022\\Threat-modeling\\course-work\\DFD-generated.json");
            fileOutputStream.write(jsonText.getBytes(StandardCharsets.UTF_8));
        } finally {
            if (fileOutputStream != null)
                fileOutputStream.close();
        }
    }

    private static void parseEmployeeObject(JSONObject employee) {
        //Get employee object within list
        JSONObject sourceInfoObject = (JSONObject) employee.get("sourceInfo");
        JSONObject targetInfoObject = (JSONObject) employee.get("targetInfo");

        String key = (String) employee.get("key");
        String sourceInfoApplicationName = (String) sourceInfoObject.get("applicationName");
        String sourceInfoServiceType = (String) sourceInfoObject.get("serviceType");

        String targetInfoApplicationName = (String) targetInfoObject.get("applicationName");
        String targetInfoServiceType = (String) targetInfoObject.get("serviceType");
        System.out.println(sourceInfoApplicationName);
        System.out.println(sourceInfoServiceType);
        System.out.println(targetInfoApplicationName);
        System.out.println(targetInfoServiceType);
        System.out.println("---------------");
//
//        //Get employee last name
//        String lastName = (String) employeeObject.get("lastName");
//        System.out.println(lastName);
//
//        //Get employee website name
//        String website = (String) employeeObject.get("website");
//        System.out.println(website);
    }
}
